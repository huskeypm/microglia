#### This model was completed in order to finish for P2X grant due on 6/16/17. Has Cooling NFAT model added as well as p-p38 path added
#
# Next step is to add look at lit values and make sure that the model is working physiologically. 


parameters("Model parameters",
           Ko = ScalarParam(5.4, unit="mM"),
           Nao = ScalarParam(140, unit="mM"),
           Cao = ScalarParam(1.8, unit="mM"),
           Clo = ScalarParam(150, unit="mM"),
           Ki = ScalarParam(135, unit="mM"),
           Mgi = ScalarParam(1, unit="mM"),
           Cli = ScalarParam(15, unit="mM"),
           Rgas = ScalarParam(8314.3, unit="J*kmole**-1*K**-1"),
           T = ScalarParam(310, unit="K"),
           F = ScalarParam(96485, unit="C*mole**-1"),
           Cm = ScalarParam(1.381e-10, unit="F"),
           cell_length = ScalarParam(100, unit="um"),
           cell_radius = ScalarParam(10.25, unit="um"))

parameters("INa",
           G_INa = ScalarParam(10, unit="mS*uF**-1"), # Mouse CES 11/20/15
           Fx_Na_jct1 = 0.19, # Mouse CES 9/24/15
           Fx_Na_SL = 0.81) # Mouse CES 9/24/15

parameters("Ca buffer", "Cytosolic",
           Ca_SL = ScalarParam(1.031812e-4, unit="mM"), # BDS 4/19/2017 moved from Ca buffer state to have code compile. Need to fix in future.
           Bmax_p38 = ScalarParam(0.015, unit='mM'),    # BDS 6/14/2017 made up number, need to find literature value
           Bmax_BDNF = ScalarParam(0.018, unit='mM'),   # BDS 6/14/2017 made up number, need to find literature value
           Bmax_P2X = ScalarParam(0.012, unit='mM'),    # BDS 6/14/2017 made up number, need to find literature value
           Bmax_CN = ScalarParam(0.0024, unit='mM'),    # ***** BDS 7/10/2017 based off Hubbard and Klee "CaM binding by CN" 1986
           Bmax_CaM = ScalarParam(0.024, unit='mM'),    # ***** Given by Shannon and Bers model 2004
           p38_total = ScalarParam(3.5e-3, unit='mM'),  # BDS 6/14/2017 made up number, need to find literature value
           CN_total = ScalarParam(1.0e-3, unit='mM'),   # ***** Cooling N_tot (total CN) 
           CaM_total = ScalarParam(6.0e-3, unit='mM'),  # ***** Cooling M (given concentration of CaM)
           Volume_adjust = ScalarParam(50.0),           # ***** Cooling Ccn
           kD_CN_CaM = ScalarParam(1.76e-3, unit='mM'), # ***** Cooling K_d1 (CN_Cam dissociation constant)
           kM_CaM = ScalarParam(5.35e-4, unit='mM'),    # ***** Cooling K_mN (half-maximal activation concentration of Ca for CaM activation for a given concentration of CN)
           #kM_CaM = ScalarParam(5.35e-3, unit='mM'),
           koff_p38 = ScalarParam(2.0e-1, unit='ms**-1'),  # BDS 6/14/2017 made up number need to find literature value
           koff_TNF = ScalarParam(2.0e-2, unit='ms**-1'),  # BDS 6/14/2017 made up number need to find literature value
           koff_BDNF = ScalarParam(1.0e-1, unit='ms**-1'), # BDS 6/14/2017 made up number need to find literature value
           koff_P2X = ScalarParam(5.0e-1, unit='ms**-1'),  # BDS 6/14/2017 made up number need to find literature value
           koff_CN = ScalarParam(8.5e-8, unit='ms**-1'),   # ***** BDS 7/10/2017 based of Hubbard and Klee "CaM binding by "CN" 1986
           koff_CaM = ScalarParam(2.38e-1, unit='ms**-1'), # ***** Given by Shannon and Bers model 2004
           koff_NFAT_Cytosol = ScalarParam(1.93e-5, unit='ms**-1'),        # Cooling k_r1
           koff_NFAT_Nucleus = ScalarParam(4.71e-2, unit='mM**-1*ms**-1'), # Cooling k_r3
           kon_TNF = ScalarParam(25, unit='mM**-1*ms**-1'),      # BDS 6/14/2017 made up number, need ot find literature value
           kon_p38 = ScalarParam(30, unit='mM**-1*ms**-1'),      # BDS 6/14/2017 made up number, need ot find literature value
           kon_BDNF = ScalarParam(10, unit='mM**-1*ms**-1'),     # BDS 6/14/2017 made up number, need ot find literature value
           kon_P2X = ScalarParam(20, unit='mM**-1*ms**-1'),      # BDS 6/14/2017 made up number, need ot find literature value
           kon_CN = ScalarParam(8.9e-3, unit='mM**-1*ms**-1'),   # ***** BDS 7/10/2017 based of Hubbard and Klee "CaM binding by CN" 1986
           kon_CaM = ScalarParam(34, unit='mM**-1*ms**-1'),      # ***** Given by Shannon and Bers model 2004
           kon_NFAT_Cytosol = ScalarParam(7.69e-3, unit='mM**-1*ms**-1'),  # ***** Cooling k_f1
           kon_NFAT_Cytosol_Nucleus = ScalarParam(1.44e-6, unit='ms**-1'), # ***** Cooling k_f2
           kon_NFAT_Nucleus = ScalarParam(3.62e-7, unit='ms**-1'),         # ***** Cooling k_f3
           kon_NFAT_Nucleus_Cytosol = ScalarParam(4.45e-7, unit='ms**-1'), # ***** Cooling k_f4
           n = ScalarParam(2.92)) # Cooling CN activation Hill coefficient

parameters("Cell",
	    kD_BDNF = ScalarParam(0.003, unit="l*F**-1*ms**-1"),
	    gCaBDNF = ScalarParam(5.4e-4, unit="l*F**-1*ms**-1"),
            gCaP2X = ScalarParam(1.0e-3, unit="l*F**-1*ms**-1"),
	    stim_start = ScalarParam(100, unit="ms"),
            stim_period = ScalarParam(1000.0, unit="ms"),
            stim_duration = ScalarParam(5, unit="ms"),
            stim_amplitude = ScalarParam(0.00065, unit="uA*uF**-1"))
	  
parameters("INaCa",
            V_max_INaCa = ScalarParam(1.0e-5, unit="uA*uF**-1"), # Mouse CES 9/24/15
            Fx_NCX_jct1 = 0.19,  # Mouse CES 11/20/15
            Fx_NCX_SL = 0.81,  # Mouse CES 11/20/15
            Q10_NCX = 1.57,
            K_mNai = ScalarParam(12.29, unit="mM"),
            K_mCao = ScalarParam(1.3, unit="mM"),
            K_mNao = ScalarParam(87.5, unit="mM"),
            K_mCai = ScalarParam(0.00359, unit="mM"),
            Kd_act = ScalarParam(0.000128, unit="mM"), # Mouse CES 9/24/15
            ksat = 0.27,
            eta = 0.35,
            HNa = 3)
 
parameters("Na buffer",
           Bmax_SL = ScalarParam(1.65, unit="mM"),
           Bmax_jct1 = ScalarParam(7.561, unit="mM"),
           kon = ScalarParam(0.0001, unit="mM**-1*ms**-1"),
           koff = ScalarParam(1e-3, unit="ms**-1"))
 
states("Ca buffer",
        #Ca_Calsequestrin = ScalarParam(1.242988, unit="mM"),
        #Ca_SLB_SL = ScalarParam(1.110363e-1, unit="mM"),
        #Ca_SLB_jct1 = ScalarParam(9.566355e-3, unit="mM"),
        #Ca_SLHigh_SL = ScalarParam(7.297378e-2, unit="mM"),
        #Ca_SLHigh_jct1 = ScalarParam(7.347888e-3, unit="mM"),
        #Ca_SR = ScalarParam(5.545201e-1, unit="mM"),
        #Ca_jct1 = ScalarParam(1.737475e-4, unit="mM"),
        #Ca_SL = ScalarParam(1.031812e-4, unit="mM"),
        #Cai = ScalarParam(8.597401e-5, unit="mM"))
	Ca_jct1 = ScalarParam(1.0e-4, unit="mM"))

states("Ca buffer", "Cytosolic",
       pp38 = ScalarParam(3.5e-5, unit='mM'),  # BDS 6/14/2017 made up number, need to find literature value
       BDNF = ScalarParam(2.25e-5, unit="mM"), # BDS 6/14/2017 made up number, need to find literature value
       TNF = ScalarParam(2.75e-7, unit="mM"), # BDS 6/14/2017 made up number, need to find literature value
       CaM_CN = ScalarParam(3.0e-6, unit='mM'),
       Ca_CaM = ScalarParam(2.911916e-4, unit='mM'),
       Ca_NFAT_Cytosol_active = ScalarParam(1.7e-09, unit='mM'),    # Cooling NFATN_c 
       Ca_NFAT_Cytosol_inactive = ScalarParam(9.83e-07, unit='mM'), # Cooling NFATp_c
       Ca_NFAT_Nucleus_active = ScalarParam(5.09e-07, unit='mM'),   # Cooling NFATN_n
       Ca_NFAT_Nucleus_inactive = ScalarParam(2.76e-07, unit='mM')) # Cooling NFATp_n

states("Na buffer",
        # PKH mouse 
        Na_jct1_buf = ScalarParam(3.999892, unit="mM"), # PKH mouse 
        Na_SL_buf = ScalarParam(8.710854e-1, unit="mM"), # PKH mouse 
        Na_jct1 = ScalarParam(12.0, unit="mM"), # BDS rat 
        Na_SL = ScalarParam(12.0, unit="mM"), # BDS rat 
        Nai = ScalarParam(12.0, unit="mM")) # BDS rat
      
states("Cell",
       V = ScalarParam(-8.556885e1, unit="mV"),
       P2X = ScalarParam(9.25e-3, unit="mM"), # BDS 6/14/2017 made up number, need to find literature value
       #BDNF = ScalarParam(2.25e-5, unit="mM"), # BDS 6/14/2017 made up number, need to find literature value
       logpATP = ScalarParam(-6, unit="logM"))

expressions("Model parameters")
Vol_Cell = 3.141592654*(cell_radius/1000)**2*cell_length/1000**3 # l  Equal to 33 pL (assume cylinder shape)
Vol_SR = 0.035*Vol_Cell # l
Vol_SL = 0.002*Vol_Cell # l BDS updated 3/29/2017 from 0.02 to 0.002 to base off Morotti
Vol_jct1 = 0.000539*Vol_Cell # l BDS updated 3/29/2017 from 0.0539*0.01 to 0.000539 to base off Morotti
Vol_myo = 0.65*Vol_Cell # l

expressions("Ion diffusion")
J_Na_jct1_SL = (Na_jct1 - Na_SL)*1.8313e-14 # mmole*ms**-1
J_Na_SL_myo = (Na_SL - Nai)*1.6386e-12 # mmole*ms**-1
J_Ca_jct1_SL = (Ca_jct1 - Ca_SL)*8.2413e-13 # mmole*ms**-1
J_Ca_SL_myo = (Ca_SL - Ca_jct1)*3.7243e-12 # mmole*ms**-1

expressions("Na buffer")
dNa_jct1_buf = kon*Na_jct1*(Bmax_jct1 - Na_jct1_buf) - koff*Na_jct1_buf # mM*ms**-1
dNa_SL_buf = kon*Na_SL*(Bmax_SL - Na_SL_buf) - koff*Na_SL_buf # mM*ms**-1
dNa_jct1_buf_dt = dNa_jct1_buf
dNa_SL_buf_dt = dNa_SL_buf
#dNa_jct1_dt = -Cm*(i_Na_jct1 + 3*i_NaCa_jct1 + i_Nab_jct1 + 3*i_NaK_jct1 + i_CaL_Na_jct1)/(Vol_jct1*F) - J_Na_jct1_SL/Vol_jct1 - dNa_jct1_buf
#dNa_SL_dt = -Cm*(i_Na_SL + 3*i_NaCa_SL + i_Nab_SL + 3*i_NaK_SL + i_CaL_Na_SL)/(Vol_SL*F) + (J_Na_jct1_SL - J_Na_SL_myo)/Vol_SL - dNa_SL_buf
dNa_jct1_dt = 0  # BDS 4/19/2017 need to fix this at some point. Done to make the Na buffer compile.
dNa_SL_dt = 0  # BDS 4/19/2017 need to fix this at some point. Done to make the Na buffer compile.
dNai_dt = J_Na_SL_myo/Vol_myo

expressions("Cell")
i_Stim = Conditional(And(Ge(time - floor(time/stim_period)*stim_period, stim_start), Le(time - floor(time/stim_period)*stim_period, stim_start + stim_duration), ), -stim_amplitude, 0) # uA*uF**-1
dV_dt = 0 # need to leave this as a state, since the runner tries to record these data
#dlogpATP_dt = 0.010 *  (sin(3.141 * time/stim_period))**3  # Oscilation between -6 and -1.75
#dlogpATP_dt = 0.0075 *  (sin(3.141 * time/stim_period))**3  # Oscilation between -6 and -2.4
dlogpATP_dt = 0.007 *  (sin(3.141 * time/stim_period))**3  # Oscilation between -6 and -3
#dlogpATP_dt = 0.003 *  (sin(3.141 * time/stim_period))**3  # Oscilation between -6 and -4.75
#dlogpATP_dt = 0.006 *  (sin(3.141 * time/stim_period))**3  # Oscilation between -6 and -3.5
#dlogpATP_dt = 0.0  # Keeps ATP at zero
cATP = 10 ** (logpATP)
modulo = time/stim_period - floor(time/stim_period)
#i_P2X = Conditional(Ge(cATP, 6.3e-4),  ((stim_amplitude * exp(-3.2 * modulo)) * (1 - 1 / (1 + exp(-(modulo - 0.4 ) * 15.0)))) ,0)
i_P2X = Conditional(Ge(cATP, 6.3e-4), -gCaP2X ,0)
#dP2X_dt = kon_P2X * Ca_NFAT_Nucleus_active * (Bmax_P2X - P2X) - koff_P2X * P2X
#dP2X_dt = Conditional(Ge(BDNF, 1.0), kon_P2X * BDNF * (Bmax_P2X - P2X) - koff_P2X * P2X, 0)
#dP2X_dt = kon_P2X * BDNF * (Bmax_P2X - P2X) - koff_P2X * P2X * 2
dP2X_dt = 0
#i_P2X = Conditional(Ge(cATP, 6.3e-4),  (stim_amplitude * exp(-1.2 * modulo)) * (1 - 1 / (1 + exp(-(modulo - 0.7) * 30.0))) ,0)
#i_P2X = Conditional(Ge(cATP, 6.3e-4),0.0009 -(stim_amplitude * exp(-0.8 * (modulo-0.9))) * (1 - 1 / (1 + exp(-(modulo ) * 11.0))) ,0)
#i_P2X = Conditional(Ge(cATP, 6.3e-4), -gCaP2X ,0)
#r_BDNF = Conditional(Ge(pp38, kD_BDNF), pp38 * kon_BDNF * (Bmax_BDNF - BDNF) - koff_BDNF * BDNF  , 0)
#r_BDNF = Conditional(Ge(Ca_jct1, kD_BDNF), gCaBDNF, 0)
#r_BDNF = pp38 * kon_BDNF * (Bmax_BDNF - BDNF) - koff_BDNF * BDNF
#dBDNF_dt = r_BDNF

expressions("INaCa")
temp_jct1 = (exp(eta*V*F/(Rgas*T))*Na_jct1**HNa*Cao - exp((eta - 1)*V*F/(Rgas*T))*Nao**HNa*Ca_jct1)/(1 + ksat*exp((eta - 1)*V*F/(Rgas*T))) # mM**4
temp_SL = (exp(eta*V*F/(Rgas*T))*Na_SL**HNa*Cao - exp((eta - 1)*V*F/(Rgas*T))*Nao**HNa*Ca_SL)/(1 + ksat*exp((eta - 1)*V*F/(Rgas*T))) # mM**4
Q_NCX = Q10_NCX**((T - 310)/10)
Ka_SL = 1/(1 + (Kd_act/Ca_SL)**3)
Ka_jct1 = 1/(1 + (Kd_act/Ca_jct1)**3)
i_NaCa_jct1 = Fx_NCX_jct1*V_max_INaCa*Ka_jct1*Q_NCX*temp_jct1/(K_mCai*Nao**HNa*(1 + (Na_jct1/K_mNai)**HNa) + K_mNao**HNa*Ca_jct1*(1 + Ca_jct1/K_mCai) + K_mCao*Na_jct1**HNa + Na_jct1**HNa*Cao + Nao**HNa*Ca_jct1) # uA*uF**-1
i_NaCa_SL = Fx_NCX_SL*V_max_INaCa*Ka_SL*Q_NCX*temp_SL/(K_mCai*Nao**HNa*(1 + (Na_SL/K_mNai)**HNa) + K_mNao**HNa*Ca_SL*(1 + Ca_SL/K_mCai) + K_mCao*Na_SL**HNa + Na_SL**HNa*Cao + Nao**HNa*Ca_SL) # uA*uF**-1
#i_NaCa = i_NaCa_jct1 + i_NaCa_SL # uA*uF**-1
#i_NaCa = V_max_INaCa  # uA*uF**-1  # BDS 4/19/2017 need to fix this at some point. Done to make Ca_jct1 oscilate as return to steady state.
i_NaCa = Conditional(Ge(Ca_jct1, 1.00001e-4), V_max_INaCa, 0)  # uA*uF**-1  # BDS 4/19/2017 need to fix this at some point. Done to make Ca_jct1 oscilate as return to steady state.

expressions("Ca buffer", "Cytosolic")
dpp38_dt = Ca_jct1 * kon_p38 * (Bmax_p38 - pp38) - koff_p38 * pp38
dCa_CaM_dt = Ca_jct1 * kon_CaM * (Bmax_CaM - Ca_CaM) - koff_CaM * Ca_CaM
dCaM_CN_dt = Ca_CaM * kon_CN * (Bmax_CN - CaM_CN) - koff_CN * CaM_CN
fraction_CN = (Ca_jct1**n) / ((Ca_jct1**n) + ((kM_CaM**n) * (1 + (kD_CN_CaM / CaM_total))))  # Cooling act_N (fraction of activated calcineurin)
CN_active = CN_total * fraction_CN  # Cooling N_active (amount of activated CN)
#fraction_CN = CaM_CN / CN_total
NFAT_Cytosol_flux = kon_NFAT_Cytosol * Ca_NFAT_Cytosol_inactive * CN_total * fraction_CN - koff_NFAT_Cytosol * Ca_NFAT_Cytosol_active * (1 - fraction_CN)  # Cooling J_1
NFAT_Cytosol_to_Nucleus_flux = Ca_NFAT_Cytosol_active * kon_NFAT_Cytosol_Nucleus                                                                           # Cooling J_2
NFAT_Nucleus_flux = kon_NFAT_Nucleus * Ca_NFAT_Nucleus_active * (1 - fraction_CN) - koff_NFAT_Nucleus * Ca_NFAT_Nucleus_inactive * CN_total * fraction_CN  # Cooling J_3
NFAT_Nucleus_to_Cytosol_flux = Ca_NFAT_Nucleus_inactive * kon_NFAT_Nucleus_Cytosol                                                                         # Cooling J_4
dCa_NFAT_Cytosol_inactive_dt = NFAT_Nucleus_to_Cytosol_flux / Volume_adjust - NFAT_Cytosol_flux # Cooling dNFATp_c/dt
dCa_NFAT_Cytosol_active_dt   = NFAT_Cytosol_flux - NFAT_Cytosol_to_Nucleus_flux                 # Cooling dNFATN_c/dt
dCa_NFAT_Nucleus_active_dt   = NFAT_Cytosol_to_Nucleus_flux * Volume_adjust - NFAT_Nucleus_flux # Cooling dNFATN_n/dt
dCa_NFAT_Nucleus_inactive_dt = NFAT_Nucleus_flux - NFAT_Nucleus_to_Cytosol_flux                 # Cooling dNFATp_c/dt
r_BDNF = kon_BDNF * pp38 - koff_BDNF * BDNF  # pp38 * kon_BDNF * (Bmax_BDNF - BDNF) - koff_BDNF * BDNF
dBDNF_dt = r_BDNF
r_TNF = kon_TNF * Ca_NFAT_Nucleus_active # - koff_TNF * TNF
dTNF_dt = r_TNF

expressions("Ca buffer")
#dCalsequestrin = kon_Calsequestrin*Ca_SR*(Bmax_Calsequestrin*Vol_myo/Vol_SR - Ca_Calsequestrin) - koff_Calsequestrin*Ca_Calsequestrin # mM*ms**-1
#dCa_Calsequestrin_dt = dCalsequestrin
#dCa_SLB_SL = kon_SL*Ca_SL*(Bmax_SLB_SL*Vol_myo/Vol_SL - Ca_SLB_SL) - koff_SLB*Ca_SLB_SL # mM*ms**-1
#dCa_SLB_jct1 = kon_SL*Ca_jct1*(Bmax_SLB_jct1*0.1*Vol_myo/Vol_jct1 - Ca_SLB_jct1) - koff_SLB*Ca_SLB_jct1 # mM*ms**-1
#dCa_SLHigh_SL = kon_SL*Ca_SL*(Bmax_SLHigh_SL*Vol_myo/Vol_SL - Ca_SLHigh_SL) - koff_SLHigh*Ca_SLHigh_SL # mM*ms**-1
#dCa_SLHigh_jct1 = kon_SL*Ca_jct1*(Bmax_SLHigh_jct1*0.1*Vol_myo/Vol_jct1 - Ca_SLHigh_jct1) - koff_SLHigh*Ca_SLHigh_jct1 # mM*ms**-1
#dCa_SLB_SL_dt = dCa_SLB_SL
#dCa_SLB_jct1_dt = dCa_SLB_jct1
#dCa_SLHigh_SL_dt = dCa_SLHigh_SL
#dCa_SLHigh_jct1_dt = dCa_SLHigh_jct1
#dCa_jct1_tot_bound = dCa_SLB_jct1 + dCa_SLHigh_jct1 # mM*ms**-1
#dCa_SL_tot_bound = dCa_SLB_SL + dCa_SLHigh_SL # mM*ms**-1
#i_Ca_jct1_tot = i_CaL_Ca_jct1 - 2*i_NaCa_jct1 + i_Cab_jct1 + i_Cap_jct1 # uA*uF**-1
#i_Ca_SL_tot = i_CaL_Ca_SL - 2*i_NaCa_SL + i_Cab_SL + i_Cap_SL # uA*uF**-1
#dCa_SR_dt = j_pump_SR - (j_leak_SR*Vol_myo/Vol_SR + j_rel_SR) - dCalsequestrin
#dCa_jct1_dt = -i_Ca_jct1_tot*Cm/(Vol_jct1*2*F) - J_Ca_jct1_SL/Vol_jct1 + j_rel_SR*Vol_SR/Vol_jct1 + j_leak_SR*Vol_myo/Vol_jct1 - 1*dCa_jct1_tot_bound
#dCa_SL_dt = -i_Ca_SL_tot*Cm/(Vol_SL*2*F) + (J_Ca_jct1_SL - J_Ca_SL_myo)/Vol_SL - 1*dCa_SL_tot_bound
#dCai_dt = -j_pump_SR*Vol_SR/Vol_myo + J_Ca_SL_myo/Vol_myo - 1*dCa_cytosol_tot_bound
dCa_jct1_dt = - i_P2X * Cm/(Vol_jct1*2*F) - i_NaCa #+ 0.00005



